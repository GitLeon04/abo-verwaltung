name: CD â€“ Build, Push & Deploy

on:
  push:
    branches: [ main ]

# Repository-Name als Variable (brauchen wir in beiden Jobs)
env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ---------- 1) Build & Push ----------
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # erlaubt Push in GHCR

    steps:
    - uses: actions/checkout@v4

    # Repo-Namen komplett in Kleinbuchstaben umwandeln
    - name: Set lowercase image name
      id: prep
      run: echo "image=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    - name: Build JAR
      run: mvn -B clean package

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ steps.prep.outputs.image }}:${{ github.sha }}

  # ---------- 2) Deploy ----------
  deploy:
    needs: build-push
    runs-on: ubuntu-latest

    steps:
    - name: SSH into server & deploy
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          IMAGE=ghcr.io/$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]'):${{ github.sha }}
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull $IMAGE
          docker compose -f /opt/abo/docker-compose.yml up -d
